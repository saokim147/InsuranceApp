@using InsuranceWebApp.Helper
@using InsuranceWebApp.Models
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model InsuranceViewModel
@{
    var totalPage = (int)Math.Ceiling((double)Model.TotalRecord / 5);
    var page = Model.CurrentPage;
    var index = (page - 1) * 5;
    var hasNextPage = page < totalPage;
    var hasPreviousPage = page > 1;
    var sortState = Model.CurrentSortOrder;
    var nextSortState = sortState.ChangeSortState();
}

<div class="hidden overflow-x-auto rounded-lg bg-neutral-100 shadow sm:mx-5 md:block">
    <table class="relative min-w-full divide-y divide-gray-200 rounded-lg bg-white shadow-sm dark:divide-neutral-700 dark:bg-neutral-800"  id="hospital-table-container">
        <thead class="bg-gray-100 dark:bg-neutral-800">
            <tr>
                <th scope="col" class="@Css.TableHeader">#</th>
                <th scope="col" class="@Css.TableHeader sticky left-0 w-12 bg-gray-100 dark:bg-neutral-800">
                    <div class="inline-flex items-center">
                        @Localizer["HospitalName"]
                        <a hx-get="@Url.GenerateHospitalUrl(Model, page, nextSortState)" hx-target="#hospital-table"
                        id="HospitalNameColumn" hx-trigger="click">
                            <svg class="-me-0.5 ms-1 size-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" width="24"
                                height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3"
                                stroke-linecap="round" stroke-linejoin="round">
                                @if (Model.CurrentSortOrder == "desc")
                                {
                                        <path id="asc-arrow" class="text-primary-600" d="m7 15 5 5 5-5"></path>
                                        <path id="desc-arrow" class="text-gray-300" d="m7 9 5-5 5 5"></path>
                                }
                                else if (Model.CurrentSortOrder == "asc")
                                {
                                        <path id="asc-arrow" d="m7 15 5 5 5-5" class="text-gray-300"></path>
                                        <path id="desc-arrow" class="text-primary-600" d="m7 9 5-5 5 5"></path>
                                }
                                else
                                {
                                        <path id="asc-arrow" d="m7 15 5 5 5-5" class="text-gray-300"></path>
                                        <path id="desc-arrow" d="m7 9 5-5 5 5" class="text-gray-300"></path>
                                }
                            </svg>

                        </a>
                    </div>
                </th>
                <th scope="col" class="@Css.TableHeader">
                    @Localizer["HospitalAddress"]
                </th>
                @if (!Model.CurrentIsBlackList)
                {
                        <th scope="col" class="@Css.TableHeader">
                            @Localizer["PhoneNumber"]
                        </th>
                        <th scope="col" class="@Css.TableHeader">
                            @Localizer["BillingTime"]
                        </th>
                        <th scope="col" class="@Css.TableHeader">
                        </th>
                }

                @if (User.Identity?.IsAuthenticated == true)
                {
                        <th scope="col" class="@Css.TableHeader">
                        </th>
                }
            </tr>
        </thead>
        <tbody class="bg-white dark:bg-neutral-800">
            @if (Model.TotalRecord > 0)
            {
                    @foreach (var hospital in Model.HospitalPageList)
                    {
                            int temp = index + 1;
                            <tr class="text-gray-800 hover:bg-gray-100 dark:hover:bg-neutral-700">
                                <td class="@Css.TableRow">
                                    @(index + 1)
                                </td>
                                <td class="@Css.TableRow sticky left-0 bg-white dark:bg-neutral-800">
                                    @hospital.HospitalName
                                </td>
                                <td class="@Css.TableRow">
                                    @hospital.HospitalAddress
                                </td>
                                @if (!Model.CurrentIsBlackList)
                                {
                                        <td class="@Css.TableRow">
                                            @(hospital.PhoneNumber ?? string.Empty)
                                        </td>
                                        <td class="@Css.TableRow">
                                            @(hospital.BillingTime ?? string.Empty)
                                        </td>
                                        <td class="px-4 text-center">
                                            <button type="button"
                                            onclick="toggleHiddenRow(@index)"
                                            class="link-primary">
                                                <heroicon name="Eye" class="size-4" />
                                            </button>
                                        </td>
                                }

                                @if (User.Identity?.IsAuthenticated == true)
                                {
                                        <td class="@Css.TableRow">        
                                            <button id="edit-btn-@index"
                                                    hx-get="@Url.Action("Edit", "Hospital", new { id = hospital.HospitalId, lang = Model.CurrentLanguage, currentPage = Model.CurrentPage })"
                                            hx-target="#editFormContainer"
                                            data-hs-overlay="#editFormContainer"
                                            class="px-4 text-center">
                                                <heroicon name="PencilSquare" class="size-4 text-blue-600"/>
                                            </button>

                                        </td>
                                        <td class="@Css.TableRow">
                                            <input type="checkbox" id="delete-checkbox-@index" 
                                            data-hospital-id="@hospital.HospitalId"
                                            class="delete-checkbox h-4 w-4 accent-primary-500">
                                        </td>

                                }
                            </tr>
                            <tr>
                                <td colspan="6"
                                class="@Css.TableRow sticky left-0 bg-white dark:bg-neutral-800"
                                id="hidden-row-@index" style="display: none;">
                                   <ul class="sticky left-0 m-0 h-auto w-72 overflow-auto p-0">
                                        <li class="text-md-start whitespace-normal">
                                            <strong>@Localizer["HospitalType"]:</strong>
                                            @hospital.IsPublicHospital.ConvertBoolToChar("Công", "Tư")
                                        </li>
                                        <li class="text-md-start whitespace-normal">
                                            <strong>@Localizer["InPatient"]:</strong>
                                            @hospital.InPatient.ConvertBoolToChar("Có", "Không")
                                        </li>
                                        <li class="text-md-start whitespace-normal">
                                            <strong>@Localizer["OutPatient"]:</strong>
                                            @hospital.OutPatient.ConvertBoolToChar("Có", "Không")
                                        </li>
                                        <li class="text-md-start whitespace-normal">
                                            <strong>@Localizer["Dental"]:</strong>
                                            @hospital.Dental.ConvertBoolToChar("Có", "Không")
                                        </li>
                                        @if (!string.IsNullOrEmpty(hospital.InsuranceAndDirectBilling))
                                        {
                                                <li class="text-md-start whitespace-normal">
                                                    <strong>@Localizer["InsuranceAndDirectBilling"]:</strong>
                                                    @hospital.InsuranceAndDirectBilling
                                                </li>
                                        }
                                        @if (!string.IsNullOrEmpty(hospital.Note))
                                        {
                                                <li class="text-md-start whitespace-normal">
                                                    <strong>@Localizer["Note"]: </strong>
                                                    @hospital.Note
                                                </li>
                                        }
    </ul>
                                </td>
                            </tr>
                            index++;
                    }
            }
            else
            {
                    <tr>
                        <td colspan="6" class="mt-1 text-center text-gray-800 dark:text-white">Không có dữ liệu</td>
                    </tr>
            }
        </tbody>
    </table>
</div>


<div id="editFormContainer"
class="hs-overlay z-[80] fixed start-0 top-0 hidden size-full overflow-y-auto overflow-x-hidden"
role="dialog" tabindex="-1" aria-labelledby="hs-notifications-label">
    <div id="editForm"
    class="opacity-0 m-3 mt-0 transition-all ease-out sm:max-w-lg sm:w-full sm:mx-auto hs-overlay-open:mt-7 hs-overlay-open:opacity-100 hs-overlay-open:duration-500">
    </div>
</div>


<div class="grid-cols-1 grid gap-4 text-gray-800 dark:text-neutral-200 md:hidden">
    @if (Model.TotalRecord > 0)
    {
            index = (Model.CurrentPage - 1) * 5;
            @foreach (var hospital in Model.HospitalPageList)
            {
                    <div class="relative space-y-3 rounded-lg bg-white p-4 shadow dark:bg-neutral-800">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                                <input type="checkbox" id="select-@index" 
                                value="@hospital.HospitalId" 
                                class="absolute right-2 top-2 h-4 w-4 cursor-pointer accent-primary-500">
                        }
                        <strong>@(index + 1)</strong><br>
                        <strong>@Localizer["HospitalName"]: </strong>@(hospital.HospitalName)<br>
                        <strong>@Localizer["HospitalAddress"]: </strong>@hospital.HospitalAddress<br>
                        <strong>@Localizer["PhoneNumber"]: </strong>@(hospital.PhoneNumber ?? string.Empty)<br>
                        <strong>@Localizer["BillingTime"]: </strong>@(hospital.BillingTime ?? string.Empty)<br>
                        <button type="button" onclick="toggleCardDetail(@index)" class="mt-3 text-sm font-semibold focus:outline-none">
                            @Localizer["Detail"]
                        </button>
                        <div id="card-detail-@index" class="mt-2 hidden">
                            <ul class="space-y-1">
                                <li>
                                    <strong>@Localizer["HospitalType"]:</strong>
                                    @hospital.IsPublicHospital.ConvertBoolToChar("Công", "Tư")
                                </li>
                                <li>
                                    <strong>@Localizer["InPatient"]:</strong>
                                    @hospital.InPatient.ConvertBoolToChar("Có", "Không")
                                </li>
                                <li>
                                    <strong>@Localizer["OutPatient"]:</strong>
                                    @hospital.OutPatient.ConvertBoolToChar("Có", "Không")
                                </li>

                                <li>
                                    <strong>@Localizer["Dental"]:</strong>
                                    @hospital.Dental.ConvertBoolToChar("Có", "Không")
                                </li>

                                @if (!string.IsNullOrEmpty(hospital.InsuranceAndDirectBilling))
                                {
                                        <li class="break-words">
                                            <strong>@Localizer["InsuranceAndDirectBilling"]:</strong>
                                            @hospital.InsuranceAndDirectBilling
                                        </li>
                                }
                                @if (!string.IsNullOrEmpty(hospital.Note))
                                {
                                        <li><strong>@Localizer["Note"]:</strong> @hospital.Note</li>
                                }
                            </ul>
                        </div>
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                                <br />
                                <button type="button"  
                                hx-get="@Url.Action("Edit", "Hospital", new { id = hospital.HospitalId, lang = Model.CurrentLanguage, currentPage = page })"
                                hx-target="#editFormContainer"
                                data-hs-overlay="#editFormContainer"
                                class="mt-3 text-sm font-semibold text-blue-500 focus:outline-none">
                                    @Localizer["Edit"]
                                </button>
                        }
                    </div>
                    index++;
            }
    }
    else
    {
            <div class="mt-1 text-center text-gray-800 dark:text-white">@Localizer["NoData"]</div>
    }
</div>


<div class="mx-auto mt-5 flex justify-end gap-5 px-3">
    <div class="flex items-center justify-center gap-x-2 sm:justify-start">
        <span class="whitespace-normal text-sm text-gray-800 dark:text-white">
            @Localizer["GotoPage"]
        </span>
        <input type="number" class="@Css.GotoBox"  name="page" hx-get="@Url.GenerateHospitalUrl(Model)"
        hx-target="#hospital-table" hx-swap="innerHTML" />
    </div>
    <nav class="flex h-10 items-center justify-center -space-x-px text-base md:justify-end" id="pagination">
        <paginate-prev url="@Url.GenerateHospitalUrl(Model, page - 1)" disabled="@hasPreviousPage" target="#hospital-table"></paginate-prev>
        @if (totalPage <= 4)
        {
                for (int i = 1; i <= totalPage; i++)
                {
                        <paginate-button page="@i" url="@Url.GenerateHospitalUrl(Model, i)" 
                            is-selected="@(i == page)" target="#hospital-table"></paginate-button>
                }
        }
        else
        {
                if (page < 4)
                {
                        // 1 2 3 4 ... 45
                        for (int i = 1; i <= 4; i++)
                        {
                                <paginate-button page="@i" url="@Url.GenerateHospitalUrl(Model, i)" is-selected="@(i == page)" target="#hospital-table"></paginate-button>
                        }
                        <paginate-ellipsis></paginate-ellipsis>
                        <paginate-button page="@totalPage" url="@Url.GenerateHospitalUrl(Model, totalPage)" 
                                is-selected="@(totalPage == page)" target="#hospital-table"></paginate-button>
                }
                else
                {
                        int endLimit = totalPage - 5;
                        if (endLimit != 0)
                        {
                                if (page > endLimit)
                                {
                                        <paginate-button page="1" url="@Url.GenerateHospitalUrl(Model)" is-selected="@(1 == page)" target="#hospital-table"></paginate-button>
                                        <paginate-ellipsis></paginate-ellipsis>
                                        for (int i = endLimit + 1; i <= totalPage; i++)
                                        {
                                                <paginate-button page="@i" url="@Url.GenerateHospitalUrl(Model, i)" is-selected="@(i == page)" target="#hospital-table"></paginate-button>
                                        }
                                }
                                else
                                {
                                        <paginate-button page="1" url="@Url.GenerateHospitalUrl(Model)" is-selected="@(1 == page)" target="#hospital-table"></paginate-button>
                                        <paginate-ellipsis></paginate-ellipsis>
                                        for (int i = page - 1; i <= page + 1; i++)
                                        {
                                                <paginate-button page="@i" url="@Url.GenerateHospitalUrl(Model, i)" is-selected="@(i == page)" target="#hospital-table"></paginate-button>
                                        }
                                        <paginate-ellipsis></paginate-ellipsis>
                                        <paginate-button page="@totalPage" url="@Url.GenerateHospitalUrl(Model, totalPage)" is-selected="@(totalPage == page)" target="#hospital-table"></paginate-button>
                                }
                        }
                        else
                        {
                            for (int i = 1; i <= 5; i++)
                            {
                                 <paginate-button page="@i" url="@Url.GenerateHospitalUrl(Model, i)" is-selected="@(i == page)" target="#hospital-table"></paginate-button>
                            }
                        }
              
                }
        }
  <paginate-next url="@Url.GenerateHospitalUrl(Model, page + 1)" disabled="@hasNextPage" target="#hospital-table" >
        </paginate-next>
    </nav>
</div>
